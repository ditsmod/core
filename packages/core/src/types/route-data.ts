import { Class, DecoratorAndValue, ResolvedProvider } from '#di';
import { SingletonRequestContext } from './http-interceptor.js';
import { ResolvedGuard, ResolvedGuardPerMod } from './mix.js';

/**
 * This metadata is generated by `ROUTES_EXTENSIONS` group, and available via DI.
 */
export class RouteMeta {
   /**
   * A resolved provider that is assigned to call a method of a controller that is bound to a specific route.
   */
  resolvedHandler?: ResolvedProvider;
  /**
   * An array of DI tokens used to look up `CanActivate()` handlers,
   * in order to determine if the current user is allowed to activate the controller.
   * By default, any user can activate.
   */
  resolvedGuards?: ResolvedGuard[];
  resolvedGuardsPerMod?: ResolvedGuardPerMod[];
  /**
   * Route decorator has value of the decorator and ref to other decorators
   * on the same controller's method.
   */
  decoratorAndValue: DecoratorAndValue;
  controller: Class;
  methodName: string | symbol;
  routeHandler?: (ctx: SingletonRequestContext) => any;
}
